{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    showCart: false\n  },\n  reducers: {\n    addItem(state, action) {\n      const item = action.payload;\n      const existingItem = state.items.find(existingItem => existingItem.id === item.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.items.push({\n          ...item,\n          quantity: 1\n        });\n      }\n    },\n    removeItem(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(existingItem => existingItem.id === id);\n      if (existingItem) {\n        if (existingItem.quantity === 1) {\n          state.items = state.items.filter(existingItem => existingItem.id !== id);\n        } else {\n          existingItem.quantity -= 1;\n        }\n      }\n    },\n    toggleCart(state) {\n      state.showCart = !state.showCart;\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","showCart","reducers","addItem","state","action","item","payload","existingItem","find","id","quantity","push","removeItem","filter","toggleCart","cartActions","actions","reducer"],"sources":["C:/Users/amogh/reactProjects/ReactCartRedux/01-starting-project/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    showCart: false,\r\n  },\r\n  reducers: {\r\n    addItem(state, action) {\r\n      const item = action.payload;\r\n      const existingItem = state.items.find(\r\n        (existingItem) => existingItem.id === item.id\r\n      );\r\n\r\n      if (existingItem) {\r\n        existingItem.quantity += 1;\r\n      } else {\r\n        state.items.push({ ...item, quantity: 1 });\r\n      }\r\n    },\r\n    removeItem(state, action) {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find(\r\n        (existingItem) => existingItem.id === id\r\n      );\r\n\r\n      if (existingItem) {\r\n        if (existingItem.quantity === 1) {\r\n          state.items = state.items.filter(\r\n            (existingItem) => existingItem.id !== id\r\n          );\r\n        } else {\r\n          existingItem.quantity -= 1;\r\n        }\r\n      }\r\n    },\r\n    toggleCart(state) {\r\n      state.showCart = !state.showCart;\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,IAAI,GAAGD,MAAM,CAACE,OAAO;MAC3B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAClCD,YAAY,IAAKA,YAAY,CAACE,EAAE,KAAKJ,IAAI,CAACI,EAC7C,CAAC;MAED,IAAIF,YAAY,EAAE;QAChBA,YAAY,CAACG,QAAQ,IAAI,CAAC;MAC5B,CAAC,MAAM;QACLP,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UAAE,GAAGN,IAAI;UAAEK,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC5C;IACF,CAAC;IACDE,UAAUA,CAACT,KAAK,EAAEC,MAAM,EAAE;MACxB,MAAMK,EAAE,GAAGL,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAClCD,YAAY,IAAKA,YAAY,CAACE,EAAE,KAAKA,EACxC,CAAC;MAED,IAAIF,YAAY,EAAE;QAChB,IAAIA,YAAY,CAACG,QAAQ,KAAK,CAAC,EAAE;UAC/BP,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACc,MAAM,CAC7BN,YAAY,IAAKA,YAAY,CAACE,EAAE,KAAKA,EACxC,CAAC;QACH,CAAC,MAAM;UACLF,YAAY,CAACG,QAAQ,IAAI,CAAC;QAC5B;MACF;IACF,CAAC;IACDI,UAAUA,CAACX,KAAK,EAAE;MAChBA,KAAK,CAACH,QAAQ,GAAG,CAACG,KAAK,CAACH,QAAQ;IAClC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMe,WAAW,GAAGnB,SAAS,CAACoB,OAAO;AAC5C,eAAepB,SAAS,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}